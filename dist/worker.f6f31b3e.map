{"version":3,"sources":["src/getPalette.js","src/worker.js"],"names":["getPalette","data","processData","sortedData","total","binArr","binning","result","mergeBins","map","bin","percent","length","toFixed","value","average","sort","p1","p2","processedData","ratio","Math","round","i","hue","getHue","push","sortByHue","r","g","b","max","min","a","l","c","j","rec","start","end","mid","floor","data1","data2","shouldComplete","bin1","Bin","bin2","error","trivial","getDistance","merge","splice","r1","g1","b1","r2","g2","b2","pow","ignoreHue","isTrivial","getAvarage","reduce","prev","curr","newData","ceil","v","onmessage","e","palette","postMessage"],"mappings":"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","file":"worker.f6f31b3e.map","sourceRoot":"..","sourcesContent":["export function getPalette (data) {\r\n  const { sortedData, total } = processData(data)\r\n  const binArr = binning(sortedData, total)\r\n  const result = mergeBins(binArr)\r\n  return result.map(bin => {\r\n    const percent = (bin.data.length / ( 3 * total)).toFixed(3)\r\n    return {\r\n      value: bin.average,\r\n      percent\r\n    }\r\n  }).sort(\r\n    ({percent: p1}, {percent: p2}) => {\r\n      if (p1 > p2) {\r\n        return -1\r\n      } else if (p1 < p2) {\r\n        return 1\r\n      } else {\r\n        return 0\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nfunction processData (data) {\r\n  const processedData = []\r\n  const length = data.length\r\n  const ratio = length <= 5000 ? 1 : Math.round(length / 5000)\r\n  for (let i = 0; i <= length - 4; i = i + 4 * ratio) {\r\n    const hue = getHue(data[i], data[i + 1], data[i + 2])\r\n    processedData.push(data[i], data[i + 1], data[i + 2], hue)\r\n  }\r\n  return { sortedData: sortByHue(processedData), total: processedData.length / 4 }\r\n}\r\n\r\nfunction getHue (r, g, b) {\r\n  const max = Math.max(r, g, b)\r\n  const min = Math.min(r, g, b)\r\n  let hue = null\r\n  switch (max) {\r\n    case min: {\r\n      return 0\r\n    }\r\n    case r: {\r\n      hue = (g - b) / (max - min)\r\n      break\r\n    }\r\n    case g: {\r\n      hue = 2 + (b - r) / (max - min)\r\n      break\r\n    }\r\n    case b: {\r\n      hue = 4 + (r - g) / (max - min)\r\n    }\r\n  }\r\n  hue = hue * 60\r\n  if (hue > 360) hue = hue - 360\r\n  if (hue < 0) hue = hue + 360\r\n  return Math.round(hue)\r\n}\r\n\r\nfunction sortByHue (a) {\r\n  let l = a.length\r\n  let b = []\r\n  let c = []\r\n  let j = 0\r\n  for (let i = 0; i <= 360; i ++) {\r\n    c[i] = []\r\n  }\r\n  for (let i = 0; i <= l - 4; i = i + 4) {\r\n    c[a[i + 3]].push(a[i], a[i + 1], a[i + 2])\r\n  }\r\n  for (let i = 0; i <= 360; i ++) {\r\n    if (c[i].length) {\r\n      b[j] = [i]\r\n      b[j].push(c[i])\r\n      j = j + 1\r\n    }\r\n  }\r\n  return b\r\n}\r\n\r\nfunction binning (sortedData, total) {\r\n  const binArr = []\r\n  const rec = function (data) {\r\n    const length = data.length\r\n    const start = data[0][0]\r\n    const end = data[length - 1][0]\r\n    const mid = Math.floor((end + start) / 2)\r\n    const data1 = []\r\n    const data2 = []\r\n    for (let i = 0; i <= length - 1; i ++) {\r\n      if (data[i][0] <= mid) {\r\n        data1.push(data[i])        \r\n      } else {\r\n        data2.push(data[i])\r\n      }\r\n    }\r\n    if (shouldComplete(data1)) {\r\n      const bin1 = new Bin(data1, total)\r\n      binArr.push(bin1)\r\n    } else {\r\n      rec(data1)\r\n    }\r\n    if (shouldComplete(data2)) {\r\n      const bin2 = new Bin(data2, total)\r\n      binArr.push(bin2)\r\n    } else {\r\n      rec(data2)\r\n    }\r\n  }\r\n  rec(sortedData)\r\n  return binArr\r\n}\r\n\r\nfunction shouldComplete (data) {\r\n  const length = data.length\r\n  const start = data[0][0]\r\n  const end = data[length - 1][0]\r\n  let total = 0\r\n  for (let i = 0; i <= length - 1; i ++) {\r\n    total = total + data[i][1].length\r\n  }\r\n  return total <= 3 || (end - start) <= 36  \r\n} \r\n\r\nfunction mergeBins (binArr) {\r\n  let length = binArr.length\r\n  if (!length) {\r\n    throw new error('faild to extract colors')\r\n  }\r\n  let i = 0\r\n  do {\r\n    if (length === 1) {\r\n      return\r\n    }\r\n    if (binArr[i].trivial || getDistance(binArr[i + 1].average, binArr[i].average) <= 25) {\r\n      binArr[i + 1].merge(binArr[i])\r\n      binArr.splice(i, 1)\r\n      length = length - 1\r\n      continue\r\n    }\r\n    i = i + 1\r\n  } while (i < length - 1)\r\n  if (binArr[i].trivial) {\r\n    binArr[i].merge(binArr[i - 1])\r\n    binArr.splice(i - 1, 1)\r\n  }\r\n  return binArr\r\n}\r\n\r\nfunction getDistance ([r1, g1, b1], [r2, g2, b2]) {\r\n  return Math.pow((r1 - r2), 2) + Math.pow((g1 - g2), 2) + Math.pow((b1 - b2), 2)\r\n}\r\n\r\nclass Bin {\r\n  constructor (data, total) {\r\n    this.data = this.ignoreHue(data)\r\n    this.total = total\r\n    this.trivial = this.isTrivial()\r\n    this.average = this.getAvarage()\r\n  }\r\n  ignoreHue (data) {\r\n    return data.reduce((prev, curr) => {\r\n      prev.push(...curr[1])\r\n      return prev\r\n    }, [])\r\n  }\r\n  merge (bin) {\r\n    const newData = bin.data\r\n    this.data = [...newData, ...this.data]\r\n    this.trivial = this.isTrivial()\r\n    this.average = this.getAvarage()\r\n  }\r\n  isTrivial () {\r\n    return this.data.length / 3 <= Math.ceil(this.total / 50)\r\n  }\r\n  getAvarage () {\r\n    let r = 0\r\n    let g = 0\r\n    let b = 0\r\n    const data = this.data\r\n    const length = data.length\r\n    for (let i = 0; i <= length - 3; i = i + 3) {\r\n      r = r + data[i]\r\n      g = g + data[i + 1]\r\n      b = b + data[i + 2]\r\n    }\r\n    return [r, g, b].map(v => Math.round(3 * v / length))\r\n  }\r\n}","import { getPalette } from './getPalette'\r\n\r\nonmessage = function (e) {\r\n  const palette = getPalette(e.data)\r\n  postMessage(palette)\r\n}"]}
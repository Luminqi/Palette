{"version":3,"sources":["../../node_modules/vanilla-tilt/lib/vanilla-tilt.js","button.js"],"names":["btnWrapper","document","getElementById","svgContainer","btn","input","remove","e","event","window","target","srcElement","removeChild","rand","min","max","Math","floor","random","VanillaTilt","init","scale","speed","explode","symbolArray","particles","children","i","randomSymbol","length","x","offsetWidth","cos","PI","y","offsetHeight","deg","innerHTML","elements","getElementsByClassName","forEach","elm","addEventListener","handleClick","click"],"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","file":"button.3240c433.map","sourceRoot":"..\\src\\demo","sourcesContent":["'use strict';\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\n/**\r\n * Created by È˜andor Sergiu (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.5.0\r\n */\r\n\r\nvar VanillaTilt = function () {\r\n  function VanillaTilt(element) {\r\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, VanillaTilt);\r\n\r\n    if (!(element instanceof Node)) {\r\n      throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\r\n    }\r\n\r\n    this.width = null;\r\n    this.height = null;\r\n    this.left = null;\r\n    this.top = null;\r\n    this.transitionTimeout = null;\r\n    this.updateCall = null;\r\n\r\n    this.updateBind = this.update.bind(this);\r\n    this.resetBind = this.reset.bind(this);\r\n\r\n    this.element = element;\r\n    this.settings = this.extendSettings(settings);\r\n    this.elementListener = this.getElementListener();\r\n\r\n    this.reverse = this.settings.reverse ? -1 : 1;\r\n\r\n    this.glare = this.isSettingTrue(this.settings.glare);\r\n    this.glarePrerender = this.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n\r\n    if (this.glare) {\r\n      this.prepareGlare();\r\n    }\r\n\r\n    this.addEventListeners();\r\n  }\r\n\r\n  VanillaTilt.prototype.isSettingTrue = function isSettingTrue(setting) {\r\n    return setting === \"\" || setting === true || setting === 1;\r\n  };\r\n\r\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.getElementListener = function getElementListener() {\r\n    if (!this.settings || !this.settings[\"mouse-event-element\"]) {\r\n      return this.element;\r\n    }\r\n\r\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n      var mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n\r\n      if (mouseEventElement) {\r\n        return mouseEventElement;\r\n      }\r\n    }\r\n\r\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n      return this.settings[\"mouse-event-element\"];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.addEventListeners = function addEventListeners() {\r\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n    this.onWindowResizeBind = this.onWindowResizeBind.bind(this);\r\n\r\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.glare) {\r\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\r\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n    this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n\r\n    if (this.glare) {\r\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.destroy = function destroy() {\r\n    clearTimeout(this.transitionTimeout);\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.reset();\r\n\r\n    this.removeEventListeners();\r\n    this.element.vanillaTilt = null;\r\n    delete this.element.vanillaTilt;\r\n\r\n    this.element = null;\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseEnter = function onMouseEnter() {\r\n    this.updateElementPosition();\r\n    this.element.style.willChange = \"transform\";\r\n    this.setTransition();\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\r\n    if (this.updateCall !== null) {\r\n      cancelAnimationFrame(this.updateCall);\r\n    }\r\n\r\n    this.event = event;\r\n    this.updateCall = requestAnimationFrame(this.updateBind);\r\n  };\r\n\r\n  VanillaTilt.prototype.onMouseLeave = function onMouseLeave() {\r\n    this.setTransition();\r\n\r\n    if (this.settings.reset) {\r\n      requestAnimationFrame(this.resetBind);\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.reset = function reset() {\r\n    this.event = {\r\n      pageX: this.left + this.width / 2,\r\n      pageY: this.top + this.height / 2\r\n    };\r\n\r\n    if (this.element && this.element.style) {\r\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(0deg) \" + \"rotateY(0deg) \" + \"scale3d(1, 1, 1)\";\r\n    }\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"0\";\r\n    }\r\n  };\r\n\r\n  VanillaTilt.prototype.getValues = function getValues() {\r\n    var x = (this.event.clientX - this.left) / this.width;\r\n    var y = (this.event.clientY - this.top) / this.height;\r\n\r\n    x = Math.min(Math.max(x, 0), 1);\r\n    y = Math.min(Math.max(y, 0), 1);\r\n\r\n    var tiltX = (this.reverse * (this.settings.max / 2 - x * this.settings.max)).toFixed(2);\r\n    var tiltY = (this.reverse * (y * this.settings.max - this.settings.max / 2)).toFixed(2);\r\n    var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n\r\n    return {\r\n      tiltX: tiltX,\r\n      tiltY: tiltY,\r\n      percentageX: x * 100,\r\n      percentageY: y * 100,\r\n      angle: angle\r\n    };\r\n  };\r\n\r\n  VanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\r\n    var rect = this.element.getBoundingClientRect();\r\n\r\n    this.width = this.element.offsetWidth;\r\n    this.height = this.element.offsetHeight;\r\n    this.left = rect.left;\r\n    this.top = rect.top;\r\n  };\r\n\r\n  VanillaTilt.prototype.update = function update() {\r\n    var values = this.getValues();\r\n\r\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n\r\n    if (this.glare) {\r\n      this.glareElement.style.transform = \"rotate(\" + values.angle + \"deg) translate(-50%, -50%)\";\r\n      this.glareElement.style.opacity = \"\" + values.percentageY * this.settings[\"max-glare\"] / 100;\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n      \"detail\": values\r\n    }));\r\n\r\n    this.updateCall = null;\r\n  };\r\n\r\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.prepareGlare = function prepareGlare() {\r\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n    if (!this.glarePrerender) {\r\n      // Create glare element\r\n      var jsTiltGlare = document.createElement(\"div\");\r\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n      var jsTiltGlareInner = document.createElement(\"div\");\r\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n      jsTiltGlare.appendChild(jsTiltGlareInner);\r\n      this.element.appendChild(jsTiltGlare);\r\n    }\r\n\r\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n    if (this.glarePrerender) {\r\n      return;\r\n    }\r\n\r\n    Object.assign(this.glareElementWrapper.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"0\",\r\n      \"left\": \"0\",\r\n      \"width\": \"100%\",\r\n      \"height\": \"100%\",\r\n      \"overflow\": \"hidden\"\r\n    });\r\n\r\n    Object.assign(this.glareElement.style, {\r\n      \"position\": \"absolute\",\r\n      \"top\": \"50%\",\r\n      \"left\": \"50%\",\r\n      \"pointer-events\": \"none\",\r\n      \"background-image\": \"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",\r\n      \"width\": this.element.offsetWidth * 2 + \"px\",\r\n      \"height\": this.element.offsetWidth * 2 + \"px\",\r\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n      \"transform-origin\": \"0% 0%\",\r\n      \"opacity\": \"0\"\r\n    });\r\n  };\r\n\r\n  VanillaTilt.prototype.updateGlareSize = function updateGlareSize() {\r\n    Object.assign(this.glareElement.style, {\r\n      \"width\": \"\" + this.element.offsetWidth * 2,\r\n      \"height\": \"\" + this.element.offsetWidth * 2\r\n    });\r\n  };\r\n\r\n  VanillaTilt.prototype.onWindowResizeBind = function onWindowResizeBind() {\r\n    this.updateGlareSize();\r\n  };\r\n\r\n  VanillaTilt.prototype.setTransition = function setTransition() {\r\n    var _this = this;\r\n\r\n    clearTimeout(this.transitionTimeout);\r\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n    if (this.glare) this.glareElement.style.transition = \"opacity \" + this.settings.speed + \"ms \" + this.settings.easing;\r\n\r\n    this.transitionTimeout = setTimeout(function () {\r\n      _this.element.style.transition = \"\";\r\n      if (_this.glare) {\r\n        _this.glareElement.style.transition = \"\";\r\n      }\r\n    }, this.settings.speed);\r\n  };\r\n\r\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param settings.axis - What axis should be disabled. Can be X or Y\r\n   * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   */\r\n\r\n\r\n  VanillaTilt.prototype.extendSettings = function extendSettings(settings) {\r\n    var defaultSettings = {\r\n      reverse: false,\r\n      max: 35,\r\n      perspective: 1000,\r\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n      scale: 1,\r\n      speed: 300,\r\n      transition: true,\r\n      axis: null,\r\n      glare: false,\r\n      \"max-glare\": 1,\r\n      \"glare-prerender\": false,\r\n      \"mouse-event-element\": null,\r\n      reset: true\r\n    };\r\n\r\n    var newSettings = {};\r\n    for (var property in defaultSettings) {\r\n      if (property in settings) {\r\n        newSettings[property] = settings[property];\r\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n        var attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n        try {\r\n          newSettings[property] = JSON.parse(attribute);\r\n        } catch (e) {\r\n          newSettings[property] = attribute;\r\n        }\r\n      } else {\r\n        newSettings[property] = defaultSettings[property];\r\n      }\r\n    }\r\n\r\n    return newSettings;\r\n  };\r\n\r\n  VanillaTilt.init = function init(elements, settings) {\r\n    if (elements instanceof Node) {\r\n      elements = [elements];\r\n    }\r\n\r\n    if (elements instanceof NodeList) {\r\n      elements = [].slice.call(elements);\r\n    }\r\n\r\n    if (!(elements instanceof Array)) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach(function (element) {\r\n      if (!(\"vanillaTilt\" in element)) {\r\n        element.vanillaTilt = new VanillaTilt(element, settings);\r\n      }\r\n    });\r\n  };\r\n\r\n  return VanillaTilt;\r\n}();\r\n\r\nif (typeof document !== \"undefined\") {\r\n  /* expose the class to window */\r\n  window.VanillaTilt = VanillaTilt;\r\n\r\n  /**\r\n   * Auto load\r\n   */\r\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n}\r\n\r\nmodule.exports = VanillaTilt;\r\n","import VanillaTilt from 'vanilla-tilt'\r\n\r\nconst btnWrapper = document.getElementById('button-wrapper')\r\nconst svgContainer = document.getElementById('svg-container')\r\nconst btn = document.getElementById('button')\r\nconst input = document.getElementById('input')\r\n\r\nfunction remove (e) {\r\n  const event = e || window.event\r\n  const target = event.target || event.srcElement\r\n  svgContainer.removeChild(target)\r\n}\r\n\r\nfunction rand(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nVanillaTilt.init(btn, {\r\n  scale: 1.1, speed: 1000\r\n})\r\n\r\nfunction explode () {\r\n  \r\n  const symbolArray = [\r\n    '#donut',\r\n    '#circle',\r\n    '#tri_hollow',\r\n    '#triangle',\r\n    '#square',\r\n    '#squ_hollow'\r\n  ];\r\n  \r\n  const particles = 10\r\n  let children = ''\r\n\r\n  for (let i = 0; i < particles; i++) {\r\n    const randomSymbol = rand(0, symbolArray.length - 1)\r\n    // positioning x,y of the particles\r\n    const x = (btnWrapper.offsetWidth / 2) + rand(120, 200) * Math.cos(Math.PI * Math.random())\r\n    const y = (btnWrapper.offsetHeight / 2) + rand(80, 150) * Math.cos(Math.PI * Math.random())\r\n    const deg = rand(0, 360) + 'deg'\r\n    const scale = rand(0.5, 1.1)\r\n    // particle element creation\r\n    children = children +  `\r\n      <svg\r\n        class=\"symbol\"\r\n        style=\"top: ${y}px; left: ${x}px; transform: scale(${scale}) rotate(${deg});\"\r\n      >\r\n      <use xlink:href=\"${symbolArray[randomSymbol]}\" />\r\n      </svg>\r\n    `\r\n  }\r\n\r\n  svgContainer.innerHTML = children\r\n  const elements = [...document.getElementsByClassName('symbol')]\r\n  elements.forEach(elm => {\r\n    elm.addEventListener('webkitAnimationEnd', remove)\r\n    elm.addEventListener('animationend', remove)\r\n  })\r\n}\r\n\r\nfunction handleClick () {\r\n  explode()\r\n  input.click()\r\n}\r\n\r\nbtn.addEventListener('click', handleClick)\r\n"]}